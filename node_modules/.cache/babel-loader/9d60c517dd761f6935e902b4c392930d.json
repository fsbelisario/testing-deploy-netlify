{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Desktop\\\\Projetos\\\\Programa\\xE7\\xE3o\\\\Cubos Academy\\\\2021.08.24 - Front-end\\\\testing-deploy-netlify\\\\src\\\\pages\\\\Cadastro\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, TextField, Button, Typography, Backdrop, CircularProgress } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport useStyles from './styles';\nimport { useForm } from 'react-hook-form';\nimport { Link, useHistory } from 'react-router-dom';\nimport { post } from '../../services/ApiClient';\nimport InputSenha from '../../components/InputSenha';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cadastro() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const history = useHistory();\n  const [erro, setErro] = useState('');\n  const [carregando, setCarregando] = useState(false);\n\n  async function onSubmit(data) {\n    if (data.senha !== data.senhaRepetida) {\n      setErro('As senhas devem ser iguais!');\n      return;\n    }\n\n    setCarregando(true);\n    setErro('');\n\n    try {\n      delete data.senhaRepetida;\n      const {\n        dados,\n        erro\n      } = await post('usuarios', data);\n\n      if (erro) {\n        setErro(dados);\n        return;\n      }\n\n      history.push('/login');\n    } catch (error) {\n      setErro(error.message);\n    } finally {\n      setCarregando(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          autoComplete: \"off\",\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Criar uma conta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.input,\n            label: \"Nome\",\n            ...register('nome', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.input,\n            label: \"Nome da loja\",\n            ...register('nome_loja', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.input,\n            label: \"E-mail\",\n            ...register('email', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputSenha, {\n            className: classes.senha,\n            label: \"Senha\",\n            register: () => register('senha', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputSenha, {\n            className: classes.senha,\n            label: \"Repita a senha\",\n            register: () => register('senhaRepetida', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), erro && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: erro\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.botao,\n            type: \"submit\",\n            children: \"CRIAR CONTA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"J\\xE1 possui uma conta? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"ACESSE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n            className: classes.backdrop,\n            open: carregando,\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cadastro, \"594Uehpai08tPE2SgIlljB11yJI=\", false, function () {\n  return [useStyles, useForm, useHistory];\n});\n\n_c = Cadastro;\nexport default Cadastro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"sources":["C:/Users/felip/Desktop/Projetos/Programação/Cubos Academy/2021.08.24 - Front-end/testing-deploy-netlify/src/pages/Cadastro/index.js"],"names":["React","useState","Card","CardContent","TextField","Button","Typography","Backdrop","CircularProgress","Alert","useStyles","useForm","Link","useHistory","post","InputSenha","Cadastro","classes","register","handleSubmit","history","erro","setErro","carregando","setCarregando","onSubmit","data","senha","senhaRepetida","dados","push","error","message","root","card","form","input","required","botao","backdrop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Backdrop,\r\n  CircularProgress\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport useStyles from './styles';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { post } from '../../services/ApiClient';\r\nimport InputSenha from '../../components/InputSenha';\r\n\r\nfunction Cadastro() {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const [erro, setErro] = useState('');\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  async function onSubmit(data) {\r\n    if (data.senha !== data.senhaRepetida) {\r\n      setErro('As senhas devem ser iguais!');\r\n      return;\r\n    }\r\n\r\n    setCarregando(true);\r\n    setErro('');\r\n\r\n    try {\r\n      delete data.senhaRepetida;\r\n\r\n      const { dados, erro } = await post('usuarios', data);\r\n\r\n      if (erro) {\r\n        setErro(dados);\r\n        return;\r\n      }\r\n\r\n      history.push('/login');\r\n    } catch (error) {\r\n      setErro(error.message);\r\n    } finally {\r\n      setCarregando(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit(onSubmit)}\r\n          >\r\n            <Typography variant=\"h4\">Criar uma conta</Typography>\r\n            <TextField className={classes.input} label=\"Nome\" {...register('nome', { required: true })} />\r\n            <TextField className={classes.input} label=\"Nome da loja\" {...register('nome_loja', { required: true })} />\r\n            <TextField className={classes.input} label=\"E-mail\" {...register('email', { required: true })} />\r\n            <InputSenha className={classes.senha} label=\"Senha\" register={() => register('senha', { required: true })} />\r\n            <InputSenha className={classes.senha} label=\"Repita a senha\" register={() => register('senhaRepetida', { required: true })} />\r\n            {erro && <Alert severity=\"error\">{erro}</Alert>}\r\n            <Button className={classes.botao} type=\"submit\">\r\n              CRIAR CONTA\r\n            </Button>\r\n            <Typography variant=\"body2\">Já possui uma conta? <Link to='/login'>ACESSE</Link></Typography>\r\n            <Backdrop className={classes.backdrop} open={carregando}>\r\n              <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cadastro;"]},"metadata":{},"sourceType":"module"}